name: Docker

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  ALIYUN_REGISTRY: "${{ secrets.ALIYUN_REGISTRY }}"
  ALIYUN_NAME_SPACE: "${{ secrets.ALIYUN_NAME_SPACE }}"
  ALIYUN_REGISTRY_USER: "${{ secrets.ALIYUN_REGISTRY_USER }}"
  ALIYUN_REGISTRY_PASSWORD: "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"

jobs:
  build:
    name: Pull and Build Multi-Platform Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Before freeing up disk space
        run: |
          echo "Before freeing up disk space"
          echo "=============================================================================="
          df -hT
          echo "==============================================================================" 

      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 2048
          swap-size-mb: 128
          remove-dotnet: 'true'
          remove-haskell: 'true'
          build-mount-path: '/var/lib/docker/'

      - name: Restart docker
        run: sudo service docker restart

      - name: Free up disk space complete
        run: |
          echo "Free up disk space complete"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker Buildx
        run: |
          docker buildx create --name mybuilder --use
          docker buildx inspect --bootstrap

      - name: Docker login to Aliyun
        run: |
          echo $ALIYUN_REGISTRY_PASSWORD | docker login $ALIYUN_REGISTRY -u $ALIYUN_REGISTRY_USER --password-stdin

      - name: Pull and Build Multi-Platform Docker Images
        run: |
          # Pull images from the list
          while IFS= read -r line || [ -n "$line" ]; do
            # Ignore empty lines and comments
            [[ -z "$line" ]] && continue
            if echo "$line" | grep -q '^\s*#'; then
              continue
            fi
            
            echo "Processing image: $line"
            image=$(echo "$line" | awk '{print $NF}')
            image="${image%%@*}"
            
            # Generate Dockerfile dynamically using echo
            echo "Generating Dockerfile for $image:$version"
            echo "FROM $image:$version" > Dockerfile
            
            # Fetch platform if any
            platform=$(echo "$line" | awk -F'--platform[ =]' '{if (NF>1) print $2}' | awk '{print $1}')
            platforms="linux/amd64,linux/arm64,linux/arm64/v8"  

            # Build and push the image for multiple platforms
            echo "Building and pushing for platforms: $platforms"
            echo "FROM --platform=$BUILDPLATFORM registry.cn-beijing.aliyuncs.com/walkerlee/alpine:3.21.0"
            docker buildx build --platform $platforms -t $ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/$image --push .

            echo "Done with $image"
          done < images.txt

      - name: Clean up disk space
        run: |
          echo "Cleaning up disk space"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="
          docker system prune -af
          echo "Disk space cleaned"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="  
